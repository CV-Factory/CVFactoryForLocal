[supervisord]
nodaemon=true
logfile=/dev/fd/1 ; supervisord 자체 로그도 stdout으로
logfile_maxbytes=0
pidfile=/tmp/supervisord.pid ; 권한 문제가 발생하지 않는 /tmp 디렉토리 사용
user=root ; supervisord를 root로 실행하는 것을 명시하여 경고를 제거합니다.

; [program:redis] # 로컬 Redis를 사용하지 않으므로 주석 처리 또는 삭제
; command=/usr/bin/redis-server --protected-mode no
; autostart=true
; autorestart=true
; stdout_logfile=/dev/fd/1
; stdout_logfile_maxbytes=0
; redirect_stderr=true

[program:fastapi]
command=uvicorn main:app --host 0.0.0.0 --port %(ENV_PORT)s --log-level info
directory=/app
autostart=true
autorestart=true
user=appuser ; non-root 사용자로 실행
stdout_logfile=/app/logs/fastapi.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=10
redirect_stderr=true

[program:celeryworker]
command=python /app/wait-for-redis.py celery -A celery_app.celery_app worker -l info --concurrency %(ENV_WORKER_CONCURRENCY)s
directory=/app
autostart=true
autorestart=true
user=appuser ; non-root 사용자로 실행
stdout_logfile=/app/logs/celery.log
stdout_logfile_maxbytes=10MB
stdout_logfile_backups=10
redirect_stderr=true
environment=WORKER_CONCURRENCY="1"

; Beat를 사용한다면 아래 섹션의 주석을 해제하세요.
; Cloud Run에서 단일 인스턴스로 Beat를 운영하려면 최소 인스턴스를 1로 설정해야 합니다.
; [program:celerybeat]
; command=celery -A celery_app.celery_app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
; directory=/app
; autostart=true
; autorestart=true
; user=appuser ; non-root 사용자로 실행
; stdout_logfile=/dev/fd/1
; stdout_logfile_maxbytes=0
; redirect_stderr=true 